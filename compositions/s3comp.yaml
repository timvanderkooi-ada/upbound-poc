apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: secure-s3-bucket
  labels: 
    crossplane.io/xrd: xs3buckets.bucket.ada.support
    ada.support/environment: dev
spec:
  writeConnectionSecretsToNamespace: upbound-system
  compositeTypeRef:
    apiVersion: bucket.ada.support/v1alpha1
    kind: XS3Bucket
  resources:
  - name: s3bucket
    base:
      apiVersion: s3.aws.crossplane.io/v1beta1
      kind: Bucket
      spec:
        deletionPolicy: Delete
        forProvider:
          locationConstraint: us-east-1
          acl: private
          tagging:
            tagSet:
              - key: provisionedBy
                value: Crossplane
              - key: Owner
                value: vanderkooi
          serverSideEncryptionConfiguration:
            rules:
              - applyServerSideEncryptionByDefault:
                  sseAlgorithm: aws:kms
        providerConfigRef:
          name: default
      patches:
      - type: FromCompositeFieldPath
        fromFieldPath: spec.parameters.bucketName
        toFieldPath: metadata.annotations.crossplane.io/external-name
      - type: FromCompositeFieldPath
        fromFieldPath: spec.parameters.bucketName
        toFieldPath: metadata.name
      - type: FromCompositeFieldPath
        fromFieldPath: status.kms.arn
        toFieldPath: spec.forProvider.serverSideEncryptionConfiguration.rules.applyServerSideEncryptionByDefault.kmsMasterKeyId
    - name: kmskey
      base:
        apiVersion: kms.aws.crossplane.io/v1alpha1
        kind: Key
        spec:
          deletionPolicy: Delete
          forProvider:
            region: us-east-1
            tags:
              - tagKey: provisionedBy
                tagValue: Crossplane
          providerConfigRef:
            name: default
      patches:
      - type: ToCompositeFieldPath
        fromFieldPath: status.atProvider.arn
        toFieldPath: status.kms.arn